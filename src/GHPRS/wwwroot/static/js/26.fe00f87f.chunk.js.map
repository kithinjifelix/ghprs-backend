{"version":3,"sources":["utils/propTypes.js","components/Page.js","components/Typography.js","actions/upload.js","pages/SubmissionsPage.js"],"names":["Object","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","PropTypes","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","length","map","_ref2","index","name","active","reactstrap__WEBPACK_IMPORTED_MODULE_5__","key","defaultProps","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classNames","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","getByUser","onSuccess","onError","dispatch","axios","get","concat","url","then","response","ACTION_TYPES","payload","data","catch","error","toast","getAllFileUploads","status","getByStatus","getById","id","viewById","upload","organizationId","formData","FormData","append","file","templateId","currentUser","startDate","endDate","post","success","console","log","uploadMERData","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","review","put","__webpack_require__","r","__webpack_exports__","react_redux__WEBPACK_IMPORTED_MODULE_0__","_api__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","components_Page__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","react_icons_md__WEBPACK_IMPORTED_MODULE_9__","_actions_upload__WEBPACK_IMPORTED_MODULE_10__","material_table__WEBPACK_IMPORTED_MODULE_11__","material_table__WEBPACK_IMPORTED_MODULE_11___default","moment__WEBPACK_IMPORTED_MODULE_12__","moment__WEBPACK_IMPORTED_MODULE_12___default","mapActionToProps","fetchUploads","getUpload","connect","state","uploads","list","props","useEffect","xl","lg","md","sm","xs","columns","field","row","user","userName","moment","createdAt","format","period","find","o","uploadStatus","comments","actions","href","target","rel","size","style","color"],"mappings":"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","file":"static/js/26.fe00f87f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n};\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import axios from \"axios\";\nimport { url } from \"../api\";\nimport { toast } from \"react-toastify\";\nimport * as ACTION_TYPES from \"./types\";\n\nexport const fetchAll = (onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_ALL,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Uploads\");\n      }\n    });\n};\n\nexport const getByUser = (onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/user`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_BY_USER,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Uploads\");\n      }\n    });\n};\n\nexport const getAllFileUploads = (status, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/GetAllFileUploads/${status}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_BY_USER,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Uploads\");\n      }\n    });\n};\n\nexport const getByStatus = (status, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/status/${status}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_BY_STATUS,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Uploads\");\n      }\n    });\n};\n\nexport const getById = (id, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/${id}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_BY_ID,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Upload\");\n      }\n    });\n};\n\nexport const viewById = (id, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/view/${id}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_VIEW_BY_ID,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Upload\");\n      }\n    });\n};\n\nexport const upload = (organizationId, data, onSuccess, onError) => (dispatch) => {\n  let formData =new FormData();\n  formData.append('file', data.file);\n  formData.append('templateId', data.templateId);\n  formData.append('currentUser', data.currentUser);\n  formData.append('startDate', data.startDate);\n  formData.append('endDate', data.endDate);\n    axios\n      .post(`${url}uploads/upload/${organizationId}`, formData)\n      .then((response) => {\n        dispatch({\n          type: ACTION_TYPES.UPLOAD_UPLOAD,\n          payload: response.data,\n        });\n        onSuccess && onSuccess();\n        toast.success(\"File Uploaded Successfully!\");\n      })\n      .catch((error) => {\n        dispatch({\n          type: ACTION_TYPES.UPLOAD_ERROR,\n          payload: \"Something went wrong\",\n        });\n        onError();\n        console.log(error);\n        toast.error(\"Something went wrong\");\n      });\n  };\n\nexport const uploadMERData = (data, onSuccess, onError) => async (dispatch) => {\n  try {\n    // // Set the chunk size in bytes\n    // const chunkSize = 10 * 1024 * 1024;\n    // const fileSize = data.file.size;\n    // let start = 0;\n    // let end = chunkSize;\n    // let chunkIds = [];\n    // while (start < fileSize) {\n    //   let chunk = data.file.slice(start, end);\n    //\n    //   //Send the chunk to the server for upload\n    //   const formData = new FormData();\n    //   formData.append('file', chunk);\n    //   // formData.append('uploadTypeId', data.uploadTypeId);\n    //   const response = await axios({\n    //     url: `${url}uploads/MER_UPLOAD`,\n    //     method: \"POST\",\n    //     data: formData,\n    //   });\n    //\n    //   start = end;\n    //   end = start + chunkSize;\n    //   if (response.status === 200) {\n    //     chunkIds.push(response.data.chunkId);\n    //   }\n    //   // Update the upload progress\n    //   dispatch({\n    //     type: ACTION_TYPES.UPLOAD_PROGRESS,\n    //     payload: (end / fileSize) * 100,\n    //   });\n    // }\n    // const formData = new FormData();\n    // formData.append(`fileId`, \"MER\");\n    // formData.append(`chunkIds`, chunkIds);\n    // const mergeResponse = await axios({\n    //   url: `${url}uploads/merge`,\n    //   method: \"POST\",\n    //   data: formData\n    // });\n    // if (mergeResponse.status === 200) {\n    //   onSuccess && onSuccess();\n    //   toast.success(\"File Uploaded Successfully!\");\n    // } else {\n    //   onError();\n    // }\n    // await fetch(`${url}/uploads/merge`, {\n    //   method: \"POST\",\n    //\n    // })\n    // let formData = new FormData();\n    // formData.append('file', data.file);\n    // formData.append('uploadTypeId', data.uploadTypeId);\n    // axios.post(`${url}uploads/MER_UPLOAD`, formData)\n    //   .then((response) => {\n    //     dispatch({\n    //       type: ACTION_TYPES.UPLOAD_UPLOAD,\n    //       payload: response.data,\n    //     });\n    //     onSuccess && onSuccess();\n    //     toast.success(\"File Uploaded Successfully!\");\n    //   })\n    //   .catch((error) => {\n    //     dispatch({\n    //       type: ACTION_TYPES.UPLOAD_ERROR,\n    //       payload: \"Something went wrong\",\n    //     });\n    //     onError();\n    //     console.log(error);\n    //     toast.error(\"Something went wrong\");\n    //   });\n  } catch (e) {\n    dispatch({\n      type: ACTION_TYPES.UPLOAD_ERROR,\n      payload: \"Something went wrong\",\n    });\n    onError();\n  }\n};\n\n  export const review = (id, data, onSuccess, onError) => (dispatch) => {\n      axios\n        .put(`${url}uploads/review/${id}`, data)\n        .then((response) => {\n          dispatch({\n            type: ACTION_TYPES.UPLOAD_REVIEW,\n            payload: response.data,\n          });\n          onSuccess && onSuccess();\n          toast.success(\"Saved Successfully!\");\n        })\n        .catch((error) => {\n          dispatch({\n            type: ACTION_TYPES.UPLOAD_ERROR,\n            payload: \"Something went wrong\",\n          });\n          onError();\n          console.log(error);\n          toast.error(\"Something went wrong\");\n          \n        });\n    };\n\n","import { connect } from \"react-redux\";\nimport { url } from \"../api\";\nimport React, { useEffect } from \"react\";\nimport Page from 'components/Page';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Col,\n  Row,\n} from 'reactstrap';\nimport { MdFileDownload } from \"react-icons/md\";\nimport { getByUser, getById } from \"../actions/upload\";\nimport MaterialTable from 'material-table'\nimport moment from 'moment';\n\nconst status = [\n  { id: 0, name: 'Pending' },\n  { id: 1, name: 'Approved' },\n  { id: 2, name: 'Denied' },\n  { id: 3, name: 'Over-Written' },\n]\n\nconst SubmissionsPage = (props) => {\n\n  useEffect(() => {\n    props.fetchUploads();\n  }, []);\n\n  return (\n    <Page\n      className=\"DashboardPage\"\n    >\n      <Row>\n        <Col xl={12} lg={12} md={12}>\n          <Card>\n            <CardHeader>Submissions</CardHeader>\n            <CardBody>\n              Your filled out template submissions.\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n          <MaterialTable\n            columns={[\n              { title: 'Name', field: 'name' },\n              { title: 'User', field: 'user' },\n              { title: 'Submission Date', field: 'date' },\n              { title: 'Period', field: 'period' },\n              { title: 'Status', field: 'status' },\n              { title: 'Upload Status', field: 'uploadStatus'},\n              { title: 'Comments', field: 'comments' },\n              { title: 'Actions', field: 'actions' }\n            ]}\n            data={props.uploads.map((row) => ({\n              name: row.name,\n              user: row.user.userName,\n              date: moment(row.createdAt).format('YYYY-MMM-DD'),\n              period: `${moment(row.startDate).format('YYYY-MMM-DD') === '0001-Jan-01' ? '' : moment(row.startDate).format('YYYY-MMM-DD')} - ${moment(row.startDate).format('YYYY-MMM-DD') === '0001-Jan-01' ? '' : moment(row.endDate).format('YYYY-MMM-DD')}`,\n              status: status.find(o => o.id === row.status).name,\n              uploadStatus: row.uploadStatus,\n              comments: row.comments,\n              actions: (\n                <div>\n                  <a\n                    href={`${url}uploads/download/${row.id}`} target=\"_blank\" rel=\"noopener noreferrer\"\n                    id={`navItem-${row.name}-${row.id}`}\n                  >\n                    <MdFileDownload size=\"15\" />{\" \"}\n                    <span style={{ color: \"#000\" }}>Download</span>\n                  </a>\n                </div>\n              ),\n            }))}\n            title=\"Users\"\n          />\n        </Col>\n      </Row>\n    </Page>\n\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    uploads: state.uploads.list,\n  };\n};\n\nconst mapActionToProps = {\n  fetchUploads: getByUser,\n  getUpload: getById,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(SubmissionsPage);\n"],"sourceRoot":""}