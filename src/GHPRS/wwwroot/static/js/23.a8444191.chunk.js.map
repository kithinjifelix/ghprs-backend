{"version":3,"sources":["utils/propTypes.js","components/Page.js","components/Typography.js","functions/UseForm.js","actions/upload.js","actions/template.js","actions/organizations.js","pages/TemplateUploadPage.js"],"names":["Object","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","PropTypes","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","length","map","_ref2","index","name","active","reactstrap__WEBPACK_IMPORTED_MODULE_5__","key","defaultProps","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classNames","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","useForm","initialFieldValues","_useState","useState","_useState2","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","values","setValues","_useState3","_useState4","errors","setErrors","handleInputChange","_e$target","target","value","fieldValue","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","resetForm","getByUser","onSuccess","onError","dispatch","axios","get","concat","url","then","response","ACTION_TYPES","payload","data","catch","error","toast","getAllFileUploads","status","getByStatus","getById","id","viewById","upload","organizationId","formData","FormData","append","file","templateId","currentUser","startDate","endDate","post","success","console","log","uploadMERData","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","review","put","__webpack_require__","d","__webpack_exports__","fetchAll","configure","updateStatus","initialize","updateTemplate","updateDataType","createWorkSheetTables","updateDataTypeInput","exists","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_api__WEBPACK_IMPORTED_MODULE_1__","react_toastify__WEBPACK_IMPORTED_MODULE_2__","_types__WEBPACK_IMPORTED_MODULE_3__","description","version","frequency","workSheetId","columns","worksheets","column","template","register","undefined","uploadTemplate","mapActionToProps","fetchTemplates","fetchOrganizations","organisationsFetch","getCurrentUserDetails","connect","state","uploads","templates","list","organizations","users","props","_Users_felixkithinji_source_DIAS_TZ_tz_data_portal_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setFile","setStartDate","_useState5","_useState6","setEndDate","_useState7","_useState8","loading","SetLoading","useEffect","_useForm","react__WEBPACK_IMPORTED_MODULE_2___default","Fragment","components_Page__WEBPACK_IMPORTED_MODULE_3__","hidden","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","sm","xs","reactstrap__WEBPACK_IMPORTED_MODULE_9__","onSubmit","event","preventDefault","authentication","currentUsername","history","push","currentRole","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","for","reactstrap__WEBPACK_IMPORTED_MODULE_12__","placeholder","onChange","react_bootstrap_daterangepicker__WEBPACK_IMPORTED_MODULE_22__","initialSettings","onCallback","start","end","format","defaultValue","files","accept","reactstrap__WEBPACK_IMPORTED_MODULE_13__","color","check","row","reactstrap__WEBPACK_IMPORTED_MODULE_14__","_components_PageSpinner__WEBPACK_IMPORTED_MODULE_25__"],"mappings":"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","file":"static/js/23.a8444191.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n};\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import { useState } from 'react'\n\nconst useForm = (initialFieldValues) => {\n    const [values, setValues] = useState(initialFieldValues)\n    const [errors, setErrors] = useState({})\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        const fieldValue = { [name]: value }\n        setValues({\n            ...values,\n            ...fieldValue\n        })\n\n    }\n\n\n  const resetForm = () => {\n    setValues(initialFieldValues)\n    setErrors({})\n\n  }\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  }\n}\n\nexport default useForm\n","import axios from \"axios\";\nimport { url } from \"../api\";\nimport { toast } from \"react-toastify\";\nimport * as ACTION_TYPES from \"./types\";\n\nexport const fetchAll = (onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_ALL,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Uploads\");\n      }\n    });\n};\n\nexport const getByUser = (onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/user`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_BY_USER,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Uploads\");\n      }\n    });\n};\n\nexport const getAllFileUploads = (status, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/GetAllFileUploads/${status}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_BY_USER,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Uploads\");\n      }\n    });\n};\n\nexport const getByStatus = (status, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/status/${status}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_BY_STATUS,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Uploads\");\n      }\n    });\n};\n\nexport const getById = (id, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/${id}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_GET_BY_ID,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Upload\");\n      }\n    });\n};\n\nexport const viewById = (id, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}uploads/view/${id}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.UPLOAD_VIEW_BY_ID,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Upload\");\n      }\n    });\n};\n\nexport const upload = (organizationId, data, onSuccess, onError) => (dispatch) => {\n  let formData =new FormData();\n  formData.append('file', data.file);\n  formData.append('templateId', data.templateId);\n  formData.append('currentUser', data.currentUser);\n  formData.append('startDate', data.startDate);\n  formData.append('endDate', data.endDate);\n    axios\n      .post(`${url}uploads/upload/${organizationId}`, formData)\n      .then((response) => {\n        dispatch({\n          type: ACTION_TYPES.UPLOAD_UPLOAD,\n          payload: response.data,\n        });\n        onSuccess && onSuccess();\n        toast.success(\"File Uploaded Successfully!\");\n      })\n      .catch((error) => {\n        dispatch({\n          type: ACTION_TYPES.UPLOAD_ERROR,\n          payload: \"Something went wrong\",\n        });\n        onError();\n        console.log(error);\n        toast.error(\"Something went wrong\");\n      });\n  };\n\nexport const uploadMERData = (data, onSuccess, onError) => async (dispatch) => {\n  try {\n    // // Set the chunk size in bytes\n    // const chunkSize = 10 * 1024 * 1024;\n    // const fileSize = data.file.size;\n    // let start = 0;\n    // let end = chunkSize;\n    // let chunkIds = [];\n    // while (start < fileSize) {\n    //   let chunk = data.file.slice(start, end);\n    //\n    //   //Send the chunk to the server for upload\n    //   const formData = new FormData();\n    //   formData.append('file', chunk);\n    //   // formData.append('uploadTypeId', data.uploadTypeId);\n    //   const response = await axios({\n    //     url: `${url}uploads/MER_UPLOAD`,\n    //     method: \"POST\",\n    //     data: formData,\n    //   });\n    //\n    //   start = end;\n    //   end = start + chunkSize;\n    //   if (response.status === 200) {\n    //     chunkIds.push(response.data.chunkId);\n    //   }\n    //   // Update the upload progress\n    //   dispatch({\n    //     type: ACTION_TYPES.UPLOAD_PROGRESS,\n    //     payload: (end / fileSize) * 100,\n    //   });\n    // }\n    // const formData = new FormData();\n    // formData.append(`fileId`, \"MER\");\n    // formData.append(`chunkIds`, chunkIds);\n    // const mergeResponse = await axios({\n    //   url: `${url}uploads/merge`,\n    //   method: \"POST\",\n    //   data: formData\n    // });\n    // if (mergeResponse.status === 200) {\n    //   onSuccess && onSuccess();\n    //   toast.success(\"File Uploaded Successfully!\");\n    // } else {\n    //   onError();\n    // }\n    // await fetch(`${url}/uploads/merge`, {\n    //   method: \"POST\",\n    //\n    // })\n    // let formData = new FormData();\n    // formData.append('file', data.file);\n    // formData.append('uploadTypeId', data.uploadTypeId);\n    // axios.post(`${url}uploads/MER_UPLOAD`, formData)\n    //   .then((response) => {\n    //     dispatch({\n    //       type: ACTION_TYPES.UPLOAD_UPLOAD,\n    //       payload: response.data,\n    //     });\n    //     onSuccess && onSuccess();\n    //     toast.success(\"File Uploaded Successfully!\");\n    //   })\n    //   .catch((error) => {\n    //     dispatch({\n    //       type: ACTION_TYPES.UPLOAD_ERROR,\n    //       payload: \"Something went wrong\",\n    //     });\n    //     onError();\n    //     console.log(error);\n    //     toast.error(\"Something went wrong\");\n    //   });\n  } catch (e) {\n    dispatch({\n      type: ACTION_TYPES.UPLOAD_ERROR,\n      payload: \"Something went wrong\",\n    });\n    onError();\n  }\n};\n\n  export const review = (id, data, onSuccess, onError) => (dispatch) => {\n      axios\n        .put(`${url}uploads/review/${id}`, data)\n        .then((response) => {\n          dispatch({\n            type: ACTION_TYPES.UPLOAD_REVIEW,\n            payload: response.data,\n          });\n          onSuccess && onSuccess();\n          toast.success(\"Saved Successfully!\");\n        })\n        .catch((error) => {\n          dispatch({\n            type: ACTION_TYPES.UPLOAD_ERROR,\n            payload: \"Something went wrong\",\n          });\n          onError();\n          console.log(error);\n          toast.error(\"Something went wrong\");\n          \n        });\n    };\n\n","import axios from \"axios\";\nimport { url } from \"../api\";\nimport { toast } from \"react-toastify\";\nimport * as ACTION_TYPES from \"./types\";\nimport { TEMPLATE_UPDATED, TEMPLATE_UPDATED_ERROR } from './types';\n\nexport const fetchAll = (onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}templates`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_GET_ALL,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Templates\");\n      }\n    });\n};\n\nexport const getById = (id, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}templates/${id}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_GET_BY_ID,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching Template\");\n      }\n    });\n};\n\nexport const configure = (id, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}templates/configure/${id}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_CONFIGURE,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong!\");\n      }\n    });\n};\n\nexport const updateStatus = (id, status, onSuccess, onError) => (dispatch) => {\n  axios\n    .put(`${url}templates/${id}/status/${status}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_UPDATE_STATUS,\n        payload: response.data,\n      });\n      onSuccess && onSuccess();\n      //toast.success(\"Updated Successfully!\");\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_ERROR,\n        payload: \"Something went wrong\",\n      });\n      onError();\n      console.log(error);\n      toast.error(\"Something went wrong\");\n\n    });\n};\n\nexport const initialize = (data, onSuccess, onError) => (dispatch) => {\n  let formData = new FormData();\n  formData.append('file', data.file);\n  formData.append('name', data.name);\n  formData.append('description', data.description);\n  formData.append('version', data.version);\n  formData.append('frequency', data.frequency);\n  formData.append('status', data.status);\n  axios\n    .post(`${url}templates/initialize`, formData)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_INITIALIZE,\n        payload: response.data,\n      });\n      onSuccess && onSuccess();\n      //toast.success(\"Template initialized Successfully!\");\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_ERROR,\n        payload: \"Something went wrong\",\n      });\n      onError();\n      console.log(error);\n      toast.error(\"Something went wrong\");\n\n    });\n};\n\nexport const updateTemplate = (id, data, onSuccess, onError) => (dispatch) => {\n  let formData = new FormData();\n  formData.append('file', data.file);\n\n  axios\n    .post(`${url}templates/updateTemplate/${id}`, formData)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_UPDATED,\n        payload: response.data,\n      });\n      onSuccess && onSuccess();\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_UPDATED_ERROR,\n        payload: \"Something went wrong\",\n      });\n      onError();\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n};\n\nexport const updateDataType = (workSheetId, columns, onSuccess, onError) => (dispatch) => {\n  axios\n    .put(`${url}templates/workSheet/update/${workSheetId}`, columns)\n    .then((response) => {\n      onSuccess && onSuccess();\n      //toast.success(\"Updated Successfully!\");\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_ERROR,\n        payload: \"Something went wrong\",\n      });\n      onError();\n      console.log(error);\n      toast.error(\"Something went wrong\");\n\n    });\n};\n\nexport const createWorkSheetTables = (worksheets, onSuccess, onError) => (dispatch) => {\n  axios\n    .post(`${url}templates/tables`, worksheets)\n    .then((response) => {\n      onSuccess && onSuccess();\n      //toast.success(\"Tables Created Successfully!\");\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_ERROR,\n        payload: \"Something went wrong\",\n      });\n      onError();\n      console.log(error);\n      toast.error(\"Something went wrong\");\n\n    });\n};\n\nexport const updateDataTypeInput = (workSheetId, column) => (dispatch) => {\n  const payload = { workSheetId: workSheetId, name: column.name, type: column.type }\n  dispatch({\n    type: ACTION_TYPES.TEMPLATE_WORKSHEET_UPDATE,\n    payload: payload,\n  });\n};\n\nexport const exists = (template) => (dispatch) => {\n  axios\n    .get(`${url}templates/exists?template=${template}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_EXISTS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.TEMPLATE_ERROR,\n        payload: \"Something went wrong\",\n      });\n      console.log(error);\n    });\n};\n\n","import axios from \"axios\";\nimport { url } from \"../api\";\nimport { toast } from \"react-toastify\";\nimport * as ACTION_TYPES from \"./types\";\n\nexport const fetchAll = (onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}organizations`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.GET_ORGANIZATIONS,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching organizations\");\n      }\n    });\n};\n\nexport const getById = (id, onSuccess, onError) => (dispatch) => {\n  axios\n    .get(`${url}organizations/${id}`)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.GET_ORGANIZATION_BY_ID,\n        payload: response.data,\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError();\n        toast.error(\"Something went wrong fetching organization\");\n      }\n    });\n};\n\nexport const register = (data, onSuccess, onError) => (dispatch) => {\n    axios\n      .post(`${url}organizations`, data)\n      .then((response) => {\n        dispatch({\n          type: ACTION_TYPES.REGISTER_ORGANIZATION,\n          payload: response.data,\n        });\n        onSuccess && onSuccess();\n        //toast.success(\"Organization Registered Successfully!\");\n      })\n      .catch((error) => {\n        dispatch({\n          type: ACTION_TYPES.ORGANIZATIONS_ERROR,\n          payload: \"Something went wrong\",\n        });\n        onError();\n        if (\n          error.response === undefined\n        ) {\n          toast.error(\"Something went wrong\");\n        } else {\n          toast.error(error);\n        }\n      });\n  };\n\nexport const updateRegister = (data, onSuccess, onError) => (dispatch) => {\n    axios\n        .put(`${url}organizations`, data)\n        .then((response) => {\n            dispatch({\n                type: ACTION_TYPES.REGISTER_ORGANIZATION,\n                payload: response.data,\n            });\n            onSuccess && onSuccess();\n            //toast.success(\"Organization Registered Successfully!\");\n        })\n        .catch((error) => {\n            dispatch({\n                type: ACTION_TYPES.ORGANIZATIONS_ERROR,\n                payload: \"Something went wrong\",\n            });\n            onError();\n            if (\n                error.response === undefined\n            ) {\n                toast.error(\"Something went wrong\");\n            } else {\n                toast.error(error);\n            }\n        });\n}\n\n","import { connect } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport Page from 'components/Page';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Label,\n    Input,\n    Form,\n    FormGroup,\n    FormText,\n    Row,\n} from 'reactstrap';\nimport { upload } from \"../actions/upload\";\nimport { fetchAll } from \"../actions/template\";\nimport { fetchAll as organisationsFetch } from '../actions/organizations';\nimport { getCurrentUserDetails } from '../actions/users';\nimport { toast } from \"react-toastify\";\nimport { authentication } from '../_services/authentication';\nimport useForm from '../functions/UseForm';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport PageSpinner from '../components/PageSpinner';\n\nconst uploadTemplate = {\n    file: '',\n    templateId: 0,\n    currentUser: '',\n    startDate: '',\n    endDate: '',\n    organizationId: 0\n};\n\nconst TemplateUploadPage = (props) => {\n    const [file, setFile] = useState();\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [loading, SetLoading] = useState(false);\n    const saveFile = e => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleCallback = (start, end) => {\n        setStartDate(start.format('YYYY-MM-DD'))\n        setEndDate(end.format('YYYY-MM-DD'));\n    }\n\n    useEffect(() => {\n        props.fetchTemplates();\n        props.fetchOrganizations();\n        props.getCurrentUserDetails();\n    }, []);\n\n    const { values, handleInputChange, resetForm } = useForm(\n        uploadTemplate\n    );\n\n    const handleSubmit = event => {\n        SetLoading(true);\n        event.preventDefault();\n        values.file = file;\n\n        values.startDate = startDate ? startDate: '0001-JAN-01';\n        values.endDate = endDate ? endDate : '0001-JAN-01';\n        values.currentUser = authentication.currentUsername;\n        values.organizationId = props.currentUser.organizationId;\n        const onSuccess = () => {\n            toast.success(\"Template uploaded successfully\");\n            resetForm();\n            SetLoading(false);\n            props.history.push(\"/submissions\");\n        };\n        const onError = () => {\n            toast.error(\"Something went wrong\");\n            SetLoading(false);\n        };\n        if (!authentication.currentRole === 'Administrator') {\n            props.upload(props.currentUser.organizationId, values, onSuccess, onError);\n        } else {\n            props.upload(values.organizationId, values, onSuccess, onError);\n        }\n    };\n\n    return (\n        <>\n        <Page\n            className=\"DashboardPage\"\n            hidden={loading}\n        >\n            <Row>\n        <Col xl={12} lg={12} md={12}>\n          <Card>\n            <CardHeader>Submit</CardHeader>\n            <CardBody>\n              Upload a filled out data template\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n            <Row>\n                <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                    <Card>\n                        <CardBody>\n                            <Row>\n                                <Col md={6}>\n                                    <Form onSubmit={handleSubmit}>\n                                        {(authentication.currentRole === 'Administrator') && (\n                                          <FormGroup>\n                                              <Label for=\"organizationId\">Organization</Label>\n                                              <Input\n                                                type=\"select\"\n                                                name=\"organizationId\"\n                                                id=\"organizationId\"\n                                                placeholder=\"Organization\"\n                                                value={values.organizationId}\n                                                onChange={handleInputChange}\n                                              >\n                                                  <option value=\"\"> </option>\n                                                  {props.organizations.map(({ name, id }) => (\n                                                    <option key={id} value={id}>\n                                                        {name}\n                                                    </option>\n                                                  ))}\n                                              </Input>\n                                          </FormGroup>\n                                        )}\n                                        <FormGroup>\n                                            <Label for=\"templateId\">Template</Label>\n                                            <Input\n                                                type=\"select\"\n                                                name=\"templateId\"\n                                                id=\"templateId\"\n                                                placeholder=\"Template\"\n                                                value={values.template}\n                                                onChange={handleInputChange}\n                                            >\n                                                <option value=\"\"> </option>\n                                                {props.templates.map(({ name, id }) => (\n                                                    <option key={id} value={id}>\n                                                        {name}\n                                                    </option>\n                                                ))}\n                                            </Input>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"period\">Period</Label>\n                                            <DateRangePicker\n                                                initialSettings={{ startDate: new Date(), endDate: new Date() }}\n                                                onCallback={handleCallback}\n                                            >\n                                                <input type=\"text\" className=\"form-control\" />\n                                            </DateRangePicker>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"excelFile\">File</Label>\n                                            <Input\n                                                type=\"file\"\n                                                name=\"file\"\n                                                placeholder=\"File\"\n                                                defaultValue={values.file}\n                                                onChange={saveFile}\n                                                accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                            />\n                                            <FormText color=\"muted\">\n                                                Upload filled out excel template\n                                            </FormText>\n                                        </FormGroup>\n                                        <FormGroup check row>\n                                            <Button>Save</Button>\n                                        </FormGroup>\n                                    </Form>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Page>\n        {(loading) &&<PageSpinner />}\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        upload: state.uploads.upload,\n        templates: state.templates.list,\n        organizations: state.organizations.list,\n        currentUser: state.users.currentUser\n    };\n};\n\nconst mapActionToProps = {\n    upload: upload,\n    fetchTemplates: fetchAll,\n    fetchOrganizations: organisationsFetch,\n    getCurrentUserDetails: getCurrentUserDetails\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(TemplateUploadPage);\n"],"sourceRoot":""}